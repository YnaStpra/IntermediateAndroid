// Generated by view binder compiler. Do not edit!
package com.yan.storyappmap.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.yan.storyappmap.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemStoryBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cardviewImageView;

  @NonNull
  public final TextView description;

  @NonNull
  public final ImageView previewImageView;

  @NonNull
  public final ConstraintLayout story;

  @NonNull
  public final TextView usernameTextView;

  private ItemStoryBinding(@NonNull CardView rootView, @NonNull CardView cardviewImageView,
      @NonNull TextView description, @NonNull ImageView previewImageView,
      @NonNull ConstraintLayout story, @NonNull TextView usernameTextView) {
    this.rootView = rootView;
    this.cardviewImageView = cardviewImageView;
    this.description = description;
    this.previewImageView = previewImageView;
    this.story = story;
    this.usernameTextView = usernameTextView;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemStoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemStoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_story, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemStoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardviewImageView;
      CardView cardviewImageView = ViewBindings.findChildViewById(rootView, id);
      if (cardviewImageView == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.previewImageView;
      ImageView previewImageView = ViewBindings.findChildViewById(rootView, id);
      if (previewImageView == null) {
        break missingId;
      }

      id = R.id.story;
      ConstraintLayout story = ViewBindings.findChildViewById(rootView, id);
      if (story == null) {
        break missingId;
      }

      id = R.id.usernameTextView;
      TextView usernameTextView = ViewBindings.findChildViewById(rootView, id);
      if (usernameTextView == null) {
        break missingId;
      }

      return new ItemStoryBinding((CardView) rootView, cardviewImageView, description,
          previewImageView, story, usernameTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
